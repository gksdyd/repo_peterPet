<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
				 
<mapper namespace="com.peterpet.demo.module.product.ProductDao">

	<resultMap type="com.peterpet.demo.module.product.ProductDto" id="resultMapObj"></resultMap>
	
	<sql id="selectCommon">
        FROM product a
        LEFT JOIN (SELECT
        		GROUP_CONCAT(funcName) AS funcName,
        		product_prodSeq
        	FROM
        		func
        	GROUP BY product_prodSeq) AS b ON a.prodSeq = b.product_prodSeq
        WHERE 1=1
        	AND prodType = #{prodType}
        	AND a.prodName LIKE CONCAT('%',#{shValue},'%')
		        <if test="shDelFlag != null and !shDelFlag.equals('')">AND a.feedDelFlag = #{shDelFlag}</if>
		        
	        	<if test="prodType == 1">
			        <if test="shFeedSalaryAge != null and !shFeedSalaryAge.equals('')">AND a.feedSalaryAge = #{shFeedSalaryAge}</if>
			        <if test="shFeedType != null and !shFeedType.equals('')">AND a.feedType = #{shFeedType}</if>
			        <if test="shFeedEtc != null and !shFeedEtc.equals('')">AND a.feedEtc = #{shFeedEtc}</if>
			        <if test="shFeedSize != null and !shFeedSize.equals('')">AND a.feedSize = #{shFeedSize}</if>
			        <if test="shFeedBrand != null and !shFeedBrand.equals('')">AND a.feedBrand = #{shFeedBrand}</if>
			        <if test="shFeedIngredient != null and !shFeedIngredient.equals('')">AND a.feedIngredient = #{shFeedIngredient}</if>
			        <if test="prodFuncArray != null and prodFuncArray.size() > 0">
			        	<foreach collection="prodFuncArray" item="func">
			        		AND FIND_IN_SET(#{func}, funcName) > 0
			        	</foreach>
			        </if>
				</if>
				
				<if test="prodType == 2">
			        <if test="shSnackType != null and !shSnackType.equals('')">AND a.snackType = #{shSnackType}</if>
			        <if test="shSnackSalaryAge != null and !shSnackSalaryAge.equals('')">AND a.SnackSalaryAge = #{shSnackSalaryAge}</if>
			        <if test="shSnackMaterial != null and !shSnackMaterial.equals('')">AND a.snackMaterial = #{shSnackMaterial}</if>
			        <if test="shSnackBrand != null and !shSnackBrand.equals('')">AND a.snackBrand = #{shSnackBrand}</if>
			        <if test="shSnackIngredient != null and !shSnackIngredient.equals('')">AND a.snackIngredient = #{shSnackIngredient}</if>
				</if>
			
				<choose>
					<when test="shOptionDate == 1">AND a.prodRegDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
					<when test="shOptionDate == 2">AND a.prodModDate BETWEEN #{shDateStart} AND #{shDateEnd}</when>
				</choose>
 
    </sql>
    
	<select id="selectMaxSeq" resultType="Integer">
		SELECT
			MAX(prodSeq)
		FROM
			product
	</select>
	
	<insert id="insert">
		INSERT INTO product(
			prodType,
			prodUseFlag,
			prodName,
			prodScore,
			prodRegDate,
			feedSalaryAge,
			feedType,
			feedEtc,
			feedBrand,
			feedIngredient,
			feedSize,
			feedDelFlag
		) VALUE (
			#{prodType},
			#{prodUseFlag},
			#{prodName},
			0,
			date_format(NOW(), '%Y-%m-%d %H:%i:%S'),
			#{feedSalaryAge},
			#{feedType},
			#{feedEtc},
			#{feedBrand},
			#{feedIngredient},
			#{feedSize},
			0
		)
		<selectKey resultType="String" keyProperty="prodSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="infoInsert">
		INSERT INTO feedinfo(
			infoPrice,
			infoWeight,
			infoDiscount,
			infoDelFlag,
			infoRegDate,
			product_prodSeq
		) VALUE (
			#{infoPrice},
			#{infoWeight},
			#{infoDiscount},
			0,
			date_format(NOW(), '%Y-%m-%d %H:%i:%S'),
			#{prodSeq}
		)
	</insert>
	
	<insert id="funcInsert">
		INSERT INTO func(
			funcName,
			product_prodSeq
		) VALUE (
			#{funcName},
			#{prodSeq}
		)
	</insert>
	
	<select id="selectList" resultMap="resultMapObj">
		SELECT
			prodUseFlag,
			prodName,
			prodRegDate,
			prodModDate,
			feedSalaryAge,
			feedType,
			feedEtc,
			feedBrand,
			feedIngredient,
			feedSize,
			(SELECT
				COUNT(*)
			FROM
				feedInfo
			WHERE 1=1
				AND prodSeq = product_prodSeq) AS infoCount,
			(SELECT
				COUNT(*)
			FROM
				func
			WHERE 1=1
				AND prodSeq = product_prodSeq) AS funcCount
		<include refid="selectCommon"></include>
		ORDER BY prodSeq DESC
		limit #{rowNumToShow} offset #{startRnumForMysql}
	</select>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon"></include>
	</select>
</mapper>